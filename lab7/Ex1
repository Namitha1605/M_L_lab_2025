#Perform 10-fold cross validation for SONAR dataset in scikit-learn using logistic regression.
# SONAR dataset is a binary classification problem with target variables as Metal or Rock. i.e. signals are from metal or rock.

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import  cross_val_score
from sklearn.linear_model import LogisticRegression


data = pd.read_csv('sonar.csv')
print(data.columns)
#print(data.info)
#print(data.shape)
print(data.isnull().sum())
print(data.duplicated().sum())
X = data[['0.0200', '0.0371', '0.0428', '0.0207', '0.0954', '0.0986', '0.1539',
       '0.1601', '0.3109', '0.2111', '0.1609', '0.1582', '0.2238', '0.0645',
       '0.0660', '0.2273', '0.3100', '0.2999', '0.5078', '0.4797', '0.5783',
       '0.5071', '0.4328', '0.5550', '0.6711', '0.6415', '0.7104', '0.8080',
       '0.6791', '0.3857', '0.1307', '0.2604', '0.5121', '0.7547', '0.8537',
       '0.8507', '0.6692', '0.6097', '0.4943', '0.2744', '0.0510', '0.2834',
       '0.2825', '0.4256', '0.2641', '0.1386', '0.1051', '0.1343', '0.0383',
       '0.0324', '0.0232', '0.0027', '0.0065', '0.0159', '0.0072', '0.0167',
       '0.0180', '0.0084', '0.0090', '0.0032']]
Y = data['R']
print(f"the x value are ")
print(X.shape)
print(f"the Y value are ")
print(Y.shape)

# label we do for 0 and 1 for y values
label_y = LabelEncoder()
y_labels = label_y.fit_transform(Y)
print(y_labels)
pipeline = make_pipeline(StandardScaler(), LogisticRegression(max_iter=500, random_state=42))
cross_val_score = cross_val_score(pipeline,X,y_labels, cv=10)
print("cross val score mean")
print(cross_val_score.mean())
print("cross val score standard_dev")
print(cross_val_score.std())
print(f"10-folds are: {cross_val_score * 100} %")


