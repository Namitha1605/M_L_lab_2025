import numpy as np
import pandas as pd
from sklearn.model_selection import KFold
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler

# Load dataset
data = pd.read_csv("data_ML.csv")

# Features and target
X = data[['age', 'BMI', 'BP', 'blood_sugar', 'Gender']].values
y = data['disease_score'].values

# Scale features to improve model performance
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Define K-Fold Cross-Validation
k = 10
kf = KFold(n_splits=k, shuffle=True, random_state=42)

# Store R² values for each fold
r2_values = []

# Perform Cross-Validation
for train_index, test_index in kf.split(X_scaled):
    X_train, X_test = X_scaled[train_index], X_scaled[test_index]
    y_train, y_test = y[train_index], y[test_index]

    # Train Linear Regression Model
    model = LinearRegression()
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Calculate MSE and R² score
    mse = mean_squared_error(y_test, y_pred)
    r2 = r2_score(y_test, y_pred)
    r2_values.append(r2)

    print(f"Mean Squared Error: {mse}")
    print(f"R-squared: {r2}\n")

# Compute Mean and Standard Deviation of R²
mean_r2 = np.mean(r2_values)


print(f"\nMean R-squared: {mean_r2}")

